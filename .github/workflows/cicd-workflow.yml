name: CICD

on:
    push:
        branches:
            - main
            - connect-to-dynamo

jobs:
    build-and-deploy:
        name: Deploy
        runs-on: ubuntu-latest
        environment: dev

        steps:
            - name: Checkout Source
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
              with:
                  mask-password: "true"

            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  IMAGE_TAG: latest
                  REPOSITORY: demo-devops-img-repository
                  D-AWS-A-KEY-ID: ${{ secrets.DYNAMODB_ACCESS_KEY_ID }}
                  D-AWS-SECRET-A-KEY: ${{ secrets.DYNAMODB_SECRET_ACCESS_KEY }}
              run: |
                  # Build a docker container and
                  # push it to ECR so that it can
                  # be deployed to ECS.
                  docker build  --build-arg DYNAMODB_AK_ID=$D-AWS-A-K-ID DYNAMODB_SECRET_AK=$D-AWS-SECRET-A-KEY -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
                  echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

            - name: Fill in the new image ID in the Amazon ECS task definition
              id: task-def
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                  task-definition: .aws/node-app-task-definition.json
                  container-name: node-app-container
                  image: ${{ steps.build-image.outputs.image }}

            - name: Deploy Amazon ECS task definition
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                  task-definition: .aws/node-app-task-definition.json
                  service: node-app-service
                  cluster: dev-demo-devops-cluster
                  wait-for-service-stability: true
